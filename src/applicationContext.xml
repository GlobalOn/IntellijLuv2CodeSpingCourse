<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- add entry to enable component scanning -->

	<context:component-scan base-package="com.luv2code.springdemo" />

	<!--
	Add a logger config to see logging messages.
	- For more detailed logs, set values to "FINEST"
	-Levels could be:
	SEVERE (highest) - writing kind of only Errors messages in Loggs

	WARNING

	INFO

	CONFIG

	FINE

	FINER

	FINEST - writing everything in Loggs
	- For info on logging levels, see: http://www.vogella.com/tutorials/Logging/article.html
 -->

	<!--
	Next line will be used to load in Spring container .properties file
	-->
	<context:property-placeholder location="classpath:cricketCoach.properties, classpath:tennisCoach.properties"/>

	<bean id="myLoggerConfig" class="com.luv2code.springdemo.MyLoggerConfig" init-method="initLogger">
		<property name="rootLoggerLevel" value="FINE"/>
		<property name="printedLoggerLevel" value="FINE"/>
	</bean>

	<bean id="happyFortuneService"
		  class="com.luv2code.springdemo.HappyFortuneService">
	</bean>

	<bean id="encourageFortuneService"
		  class="com.luv2code.springdemo.EncourageFortuneService">
	</bean>


	<bean id="myCoach"
		  class="com.luv2code.springdemo.BaseballCoach">
		<constructor-arg ref="happyFortuneService"/>
	</bean>

	<bean id="myTennisCoach"
		  class="com.luv2code.springdemo.TennisCoach">
		<constructor-arg ref="encourageFortuneService"/>

		<property name="name" value="${tennisCoach.name}"/>
		<property name="email" value="${tennisCoach.email}"/>
		<property name="team" value="${tennisCoach.team}"/>
	</bean>

	<!--
	Setter injection of property "fortuneService".
	Remember: to Inject property by XML, I need to have setter method that matches the name of property
	(set+propertyName = setfortunesevice) AND this setter HAVE TO BE PUBLIC!!!
	-->
	<bean id="myCricketCoach"
		  class="com.luv2code.springdemo.CricketCoach">
		<property name="fortuneService" ref="happyFortuneService"/>
		<!--
		Injecting literal value by XML setter methods HARDCODED.
		-->
		<property name="name" value="TED"/>
		<!--
		Injecting literal values by XML setter methods from loaded cricketCoach.properties file.
		-->
		<property name="email" value="${cricketCoach.email}"/>
		<property name="team" value="${cricketCoach.team}"/>
	</bean>

</beans>





